/*                                                                Сортировка
слиянием

1. Сортируемый массив разбивается на две части примерно одинакового размера;
2. Каждая из получившихся частей сортируется отдельно, например — тем же самым
алгоритмом;
3. Два упорядоченных массива половинного размера соединяются в один.
1.1. — 2.1. Рекурсивное разбиение задачи на меньшие происходит до тех пор, пока
размер массива не достигнет единицы (любой массив длины 1 можно считать
упорядоченным).

3.1. Соединение двух упорядоченных массивов в один.
Основную идею слияния двух отсортированных массивов можно объяснить на следующем
примере. Пусть мы имеем два уже отсортированных по возрастанию подмассива.
Тогда: 3.2. Слияние двух подмассивов в третий результирующий массив. На каждом
шаге мы берём меньший из двух первых элементов подмассивов и записываем его в
результирующий массив. Счётчики номеров элементов результирующего массива и
подмассива, из которого был взят элемент, увеличиваем на 1. 3.3. «Прицепление»
остатка. Когда один из подмассивов закончился, мы добавляем все оставшиеся
элементы второго подмассива в результирующий массив.
*/

// Всегда (и в среднем, и в худшем, и в лучшем случае) O(n*log(n))

#include <vector>

int Maxx(int a, int b);
int Minn(int a, int b);

std::vector<int> Slice(const std::vector<int>& vector, const size_t from,
                       const size_t to);

std::vector<int> Merge(std::vector<int>& left, std::vector<int>& right);

void MergeSort(std::vector<int>& vec);
