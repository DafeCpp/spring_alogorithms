/*                        Быстрая сортировка, сортировка Хоара (англ.
quicksort), часто называемая qsort Выбрать из массива элемент, называемый
опорным. Это может быть любой из элементов массива. От выбора опорного элемента
не зависит корректность алгоритма, но в отдельных случаях может сильно зависеть
его эффективность. Сравнить все остальные элементы с опорным и переставить их в
массиве так, чтобы разбить массив на три непрерывных отрезка, следующих друг за
другом: «элементы меньшие опорного», «равные» и «большие». Для отрезков
«меньших» и «больших» значений выполнить рекурсивно ту же последовательность
операций, если длина отрезка больше единицы.

Алгоритм состоит из трёх шагов:
1. Выбрать элемент из массива. Назовём его опорным.
2. Разбиение: перераспределение элементов в массиве таким образом, что элементы,
меньшие опорного, помещаются перед ним, а большие или равные — после.
3. Рекурсивно применить первые два шага к двум подмассивам слева и справа от
опорного элемента. Рекурсия не применяется к массиву, в котором только один
элемент или отсутствуют элементы.
*/

// В худшем случае O( n^2 ). В среднем O( n*log(n) ).
// В лучшем случае O( n*log(n) ) (обычное разделение) или O( n ) (разделение на
// 3 части)

#include <vector>

void QuickSort(std::vector<int>& vec, int first, int last);